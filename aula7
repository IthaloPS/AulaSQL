create table tb_teste_tipo(
um_smallint smallint,
um_int	int,
um_float	float,
um_real	real,
um_numeric	numeric(5,2)
);

insert into tb_teste_tipo
values
(2,2,2.0,2.0,2.0),
(-100,-100,123.456789,123.456789,123.456789),
(-32768,-123456789,1.23456789,1.23456789,1.23456789),
(-32768,-123456789,123456789.123456789,123456789.123456789,123.123456789);

-- Erro SQL [22003]: ERROR: numeric field overflow
-- Detalhe: A field with precision 5, scale 2 must round to an absolute value less than 10^3.

insert into tb_teste_tipo 
values
(-32768,-123456789,123456789.123456789,23456789.123456789,123456789.123456789);

select * from tb_teste_tipo ;

create table tb_funcionario_2 (
cod_referencia	char(5),
dias_uteis	int[]
);

insert into tb_funcionario_2 
values
('val01', '{0,1,0,1,1,1,1}');

insert into tb_funcionario_2 
values
('val02', '{0,1,1,1,1,0,1}');

select * from tb_funcionario_2 ;

select dias_uteis[2]
from tb_funcionario_2 
where cod_referencia = 'val02';

drop table tb_funcionario_2 ;

create table tb_funcionario_2(
cod_referencia	char(5),
dias_uteis	int array[7]
);

select cast (dt_entrega as char(10))
from tb_pedido tp ;

select preco_venda, cast (preco_venda as int) as "Guia de Preço"
from tb_item 
where preco_venda > 5.00;

select ds_item,
	substr(ds_item, 3,5),
	preco_venda,
	round(preco_venda,1)
from tb_item;

select trim('0' from '000Teste da Função TRIM000');

select trim(' teste da Função TRIM ');

select strpos('Teste da Função TRIM', 'e');

select abs(-12345.67);

select i.id_item,
	i.ds_item,
	e.quantidade,
	current_timestamp 
from tb_item i
join tb_estoque e on(i.id_item = e.id_item);

select current_user, current_time
	from tb_cliente tc;
	
select oid, nome, sobrenome 
from tb_cliente;

create table tb_teste_oid(
col_a	int,
col_b	int
)without oids;

insert into tb_teste_oid 
values
(generate_series(1,100),
generate_series(100,200));

select col_a, col_b
from tb_teste_oid;

show all;

create table tb_teste_restricoes(
col_notnull	int not null,
col_unique	int unique,
col_pk	int primary key,
col_default	int default 42,
col_check	int check(col_check < 42)
);

insert into tb_teste_restricoes(col_notnull,
								col_unique,
								col_pk,
								col_default,
								col_check)
values
(1,1,1,1,1),
(2,2,2,2,2);

--Erro SQL [23505]: ERROR: duplicate key value violates unique constraint "tb_teste_restricoes_pkey"
--Detalhe: Key (col_pk)=(2) already exists.
insert into tb_teste_restricoes(col_notnull,
								col_unique,
								col_pk,
								col_default,
								col_check)
values
(2,2,2,2,2);

insert into tb_teste_restricoes(col_notnull,
								col_unique,
								col_pk,
								col_default,
								col_check)
values
(1,null,98,1,1),
(1,null,99,1,1);

select * from tb_teste_restricoes ;

-- Erro SQL [23505]: ERROR: duplicate key value violates unique constraint "tb_teste_restricoes_col_unique_key"
-- Detalhe: Key (col_unique)=(2) already exists.
insert into tb_teste_restricoes(col_notnull,
								col_unique,
								col_pk,
								col_default,
								col_check)
values
(2,2,9,2,2);

--Erro SQL [23514]: ERROR: new row for relation "tb_teste_restricoes" violates check constraint "tb_teste_restricoes_col_check_check"
--Detalhe: Failing row contains (3, 3, 3, 3, 109).
insert into tb_teste_restricoes(col_notnull,
								col_unique,
								col_pk,
								col_default,
								col_check)
values
(3,3,3,3,109);

insert into tb_teste_restricoes(col_notnull,
								col_unique,
								col_pk,
								col_check)
values
(3,3,3,41);

drop table tb_teste_restricoes ;

create table tb_teste_restricoes(
chave1	int,
chave2	int,
mystring	varchar(15),
constraint cs1 check (mystring <> ''),
constraint cs2 primary key(chave1, chave2)
);

insert into tb_teste_restricoes
values
(1,1,'ola'),
(1,2,'Tchau');

--Erro SQL [23514]: ERROR: new row for relation "tb_teste_restricoes" violates check constraint "cs1"
--Detalhe: Failing row contains (1, 2, ).
insert into tb_teste_restricoes
values
(1,2,'');

alter table tb_teste_restricoes 
add column mydate date;

select * from tb_teste_restricoes ;

alter table tb_teste_restricoes 
rename column mydate to dt_nascimento;

alter table tb_teste_restricoes 
drop column dt_nascimento;

alter table tb_teste_restricoes 
drop constraint cs1;

alter table tb_teste_restricoes
add constraint cs3 unique(dt_nascimento);

alter table tb_teste_restricoes 
alter column mystring set default 'ok';

select * from tb_teste_restricoes;

alter table tb_teste_restricoes 
alter dt_nascimento type varchar(32);

alter table tb_teste_restricoes 
rename to tb_teste_restricoes_2;

drop table tb_teste_restricoes_2;

create temporary table tb_teste_restricoes(
chave1	int,
chave2	int,
mystring	varchar(15),
constraint cs1 check(mystring <> ''),
constraint cs2 primary key(chave1, chave2)
);

select * from tb_teste_restricoes;

create table tb_cidades(
nome	text,
populacao	float,
altitude	int
);

create table tb_capitais(
uf	char(2)
) inherits(tb_cidades);

select * from tb_capitais ;

alter table tb_cidades 
drop column nome;

drop table tb_cidades cascade;

--cai na prova diferenca entre o like e o inherits

create table tb_cidades(
nome	text,
populacao	float,
altitude	int
);

create table tb_capitais(
uf	char(2),
like tb_cidades
);

select * from tb_capitais;

alter table tb_cidades 
drop column altitude;

select i.ds_item, e.quantidade
from tb_item i 
join tb_estoque e on(i.id_item = e.id_item);
